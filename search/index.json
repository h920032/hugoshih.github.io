[{"content":"Docker使用小筆記 前言 Docker可以說是雲端技術中非常重要的一項專案，這個專案實現了Container技術，使得軟體的執行可以不在受系統環境限制，更加速了雲端技術中Microservice概念的發展，以下就簡單介紹常用的Docker指令。\n基本操作  離開但不關閉container：  1  crtl+p crtl+q   連著打\n 查看container列表  1  sudo docker container ls    進入container  1  sudo docker attach \u0026lt;ID\u0026gt;    關閉container  1  sudo container stop \u0026lt;ID\u0026gt;   Docker Image操作  查看image列表  1  sudo docker image ls    下載image  1  sudo docker pull \u0026lt;hub path\u0026gt;    Run  1  sudo docker run \u0026lt;--gpus all\u0026gt; \u0026lt;-it\u0026gt; \u0026lt;-p 80(local):80(docker)\u0026gt; \u0026lt;-v /data(local):/data(docker) \u0026lt;images\u0026gt; \u0026lt;command\u0026gt;    image commit  1  sudo docker commit \u0026lt;ID\u0026gt; \u0026lt;images name\u0026gt;   Reference https://larrylu.blog/step-by-step-dockerize-your-app-ecd8940696f4\n 在沒有sudo權限使用docker： https://docs.docker.com/engine/security/rootless/ docker儲存： https://peihsinsu.gitbooks.io/docker-note-book/content/docker-save-image.html docker run 操作： https://noob.tw/docker-basic/ docker port： https://www.runoob.com/docker/docker-run-command.html nvidia docker： https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md https://www.celantur.com/blog/run-cuda-in-docker-on-linux/ https://docs.docker.com/engine/reference/commandline/run/#access-an-nvidia-gpu error解法： https://github.com/NVIDIA/nvidia-docker/issues/1243 x11 firefox docker： https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container 指令大全： https://github.com/docker-library/php/issues/359 沒有中文的解法： https://github.com/docker-library/php/issues/359  ","date":"2022-05-30T14:56:58+08:00","image":"/p/docker%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%AD%86%E8%A8%98/000648630023_hu02fe1734605d73890f92a3bf4d63dd0a_6802511_120x120_fill_q75_box_smart1.jpg","permalink":"/p/docker%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%AD%86%E8%A8%98/","title":"Docker使用小筆記"},{"content":"Linux終端機視窗管理工具tmux筆記 前言 一般在操作遠端的Linux主機時通常會使用SSH連線進去操作，然而若遇到需要執行一個不可中斷的指令但又不得不中斷SSH連線時，一般情況下會將該Process拉到背景執行或是使用視窗管理工具screen，而tmux則是另一個非常強大的視窗管理工具，可以在終端機中模擬視窗操作，包括視窗的切換、視窗的切割等等，以下就列出一些tmux常用到的一些指令。\n基本 進入tmux\n1  tmux   列出tmux視窗列表\n1  tmux ls   連接tmux使窗\n1  tmux attach -t 0   1  tmux attach -t database   建立一個名為database的視窗\n1  tmux new -s database   更改名稱\n1  tmux rename-session -t 0 database   水平切割\n1 2  ctrl+b %   垂直切割\n1 2  ctrl+b \u0026#34;   建立新視窗\n1 2  ctrl+b c   上一個視窗\n1 2  ctrl+b p   下一個視窗\n1 2  ctrl+b n   依照編號直接切換（編號顯示於狀態列）\n1 2  ctrl+b \u0026lt;number\u0026gt;   視窗選單\n1 2  ctrl+b s   滑動視窗\n1 2  crtl+b [ q (離開)   進階 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  # 新增 $ tmux # OR $ tmux new -s \u0026lt;your_session_name\u0026gt; # session 列表 $ tmux ls # 重新連線 session $ tmux a -t 0 # OR $ tmux a -t \u0026lt;session_name\u0026gt; # 刪除 session $ tmux kill-session -t 0 # OR $ tmux kill-session -t \u0026lt;session_name\u0026gt; # OR $ tmux kill-session -a # 全部 # 刪除 tmux server $ tmux kill-server # 重新命名 session $ tmux rename-session -t 0 \u0026lt;new_session_name\u0026gt; # 快捷鍵/視窗管理 # C-b ? Help # C-b c 新增視窗 # C-b， 視窗命名 # C-b w 視窗列表 # C-b f 尋找視窗 # C-b \u0026amp; 刪除視窗 # C-b % 垂直分割區塊 # C-b “ 水平分割區塊 # C-b \u0026lt;方向鍵\u0026gt; # C-b p 上一個視窗 # C-b n 下一個視窗 # C-b \u0026lt;number\u0026gt; 依照編號直接切換（編號顯示於狀態列） # C-b d 離開 session # C-b x 關閉 Pane # C-d 關閉 Pane # C-b z 讓一個 Pane 變成全螢幕，在輸入一次則回到剛剛的尺寸   Reference  ssh自動連進tmux https://stackoverflow.com/questions/27613209/how-to-automatically-start-tmux-on-ssh-session 與iterm結合 https://medium.com/@wancw/iterm2-ssh-tmux-73d3fcf9dac6  ","date":"2022-05-30T13:32:31+08:00","image":"/p/linux%E7%B5%82%E7%AB%AF%E6%A9%9F%E8%A6%96%E7%AA%97%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7tmux%E7%AD%86%E8%A8%98/data_hu7fba9da1679ce4a56c592454604cb9c1_493914_120x120_fill_q75_box_smart1.jpg","permalink":"/p/linux%E7%B5%82%E7%AB%AF%E6%A9%9F%E8%A6%96%E7%AA%97%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7tmux%E7%AD%86%E8%A8%98/","title":"Linux終端機視窗管理工具tmux筆記"},{"content":"Google Interview Challenge https://www.1111.com.tw/1000w/fanshome/discussTopic.asp?cat=FANS\u0026id=301667\nhttps://www.gushiciku.cn/pl/gyQP/zh-tw\nhttps://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed\nhttps://docs.google.com/spreadsheets/d/1yRCOJ8KysRVkq0O9IlDriT01tC6lzPapmFO4PCmDJQA/edit#gid=126913158 Google面試準備 刷題類型\n Arrays Binary Search Tree Binary Tree Dynamic Programming Greedy Graph – BFS、DFS Heap LinkedList Recursion Searching – Binary Search、Quick Select Stack String Sorting Topological sorting Trie  Google面試經典題目\n coin change coin change 2 Unique path Unique path 2 Permutation Permutation 2 subset subset 2 search in rotated sorted array search in rotated sorted array 2 word break word break 2 jump game jump game 2 word search word search 2 combination combination 2 meeting room meeting room 2 number of islands number of islands 2 number of distinct island number of distinct island 2  BQ準備 Imagine you worked in a project or a team that had a problematic culture Tell about the leading experience of a group project Thinking about a time you were given a large amount of work to complete under the tight deadline Tell about a time you face a problem without having clear solution How do you solve the conflict that happen in the team\nBlind 75 Array  Two Sum Best Time to Buy and Sell Stock Contains Duplicate Product of Array Except Self (M) Maximum Subarray Maximum Product Subarray Find Minimum in Rotated Sorted Array (M) Search in Rotated Sorted Array 3 Sum Container With Most Water  Binary  Sum of Two Integers Number of 1 Bits Counting Bits Missing Number Reverse Bits  Dynamic Programming  Climbing Stairs Coin Change Longest Increasing Subsequence Longest Common Subsequence Word Break Problem Combination Sum House Robber House Robber II Decode Ways Unique Paths Jump Game  Graph  Clone Graph Course Schedule Pacific Atlantic Water Flow (M) Number of Islands Longest Consecutive Sequence (M) Alien Dictionary (Leetcode Premium) (H) Key: directed graph + DFS or BFS Graph Valid Tree (Leetcode Premium) (M) Key: Check edges number first and then check unconnected component (Graph theory), Union Find! Number of Connected Components in an Undirected Graph (Leetcode Premium) (M)  Interval  Insert Interval Merge Intervals Non-overlapping Intervals (M) Key: greedy Meeting Rooms (Leetcode Premium) Meeting Rooms II (Leetcode Premium)  Linked List  Reverse a Linked List Detect Cycle in a Linked List Merge Two Sorted Lists Merge K Sorted Lists Remove Nth Node From End Of List Reorder List (M)  Matrix  Set Matrix Zeroes Spiral Matrix Rotate Image Word Search  String  Longest Substring Without Repeating Characters Longest Repeating Character Replacement Minimum Window Substring (H) Key: Optimized Sliding Windows! Valid Anagram Group Anagrams Valid Parentheses Valid Palindrome Longest Palindromic Substring Key: Manacher\u0026rsquo;s Algorithm Palindromic Substrings (M) Key: Manacher\u0026rsquo;s Algorithm Encode and Decode Strings (Leetcode Premium) (M)  Tree  Maximum Depth of Binary Tree Same Tree Invert/Flip Binary Tree Binary Tree Maximum Path Sum (H) Binary Tree Level Order Traversal (M) Serialize and Deserialize Binary Tree (H) Subtree of Another Tree Construct Binary Tree from Preorder and Inorder Traversal (M) Validate Binary Search Tree Kth Smallest Element in a BST (M) Lowest Common Ancestor of BST Implement Trie (Prefix Tree) (M) Add and Search Word (M) Word Search II  Heap  Merge K Sorted Lists Top K Frequent Elements (M) Find Median from Data Stream (H)  Tips https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed\nFunny One  Count Unique Characters of All Substrings of a Given String Key: really special solution Find the Duplicate Number Find Leaves of Binary Tree Split Array Largest Sum Key: Binary Search!!! Trapping Rain Water The Skyline Problem Key: Select the building with heapqueue Largest Rectangle in Histogram Key: tricky Apply with stack!!! Subtree of Another Tree Key: Markle Hash Substring with Concatenation of All Words Key: Sliding Window Longest Valid Parentheses key: Two pointer or DP or Stack Best Time to Buy and Sell Stock IV Key: Tricky One pass solution (DP or O(k) space) Design HashSet Key: Multiplicative hashing Unique Binary Search Trees Key: Catalan number! Shortest Path in a Grid with Obstacles Elimination Key: BFS + A* Student Attendance Record II Key: hardhard DP Guess the Word Key: Game theroy, compare with previous Min Cost to Connect All Points Key: minmun spanning tree!! (Prim\u0026rsquo;s or ) Path With Minimum Effort Key: Binary search space 132 Pattern Key: stack+min array  ","date":"2022-05-30T11:41:18+08:00","image":"/p/google-interview-leetcode-question-challenge/IMG_4879_hu9fbc77593f0c9272a39f6458a8217e4a_4615592_120x120_fill_q75_box_smart1.jpg","permalink":"/p/google-interview-leetcode-question-challenge/","title":"Google Interview Leetcode Question Challenge"}]